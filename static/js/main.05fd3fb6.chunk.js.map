{"version":3,"sources":["symbols.js","Symbol.jsx","App.js","serviceWorker.js","index.js"],"names":["match","name","symbol","fill","type","CatPoint","this","props","x","y","datum","console","log","symbols","symbolSettings","indexOf","getSymbol","fontSize","textAlign","width","React","Component","MAX_DAMAGE","styles","classLabel","strokeWidth","xaxis","tickLabels","grid","stroke","yaxis","scatter","labels","legend","border","color","annoationLine","data","strokeDasharray","angle","App","localData","map","ammoRow","Damage","includes","returnData","Number","replace","matches","trim","getTypeAndName","filter","Boolean","className","domainPadding","padding","height","theme","VictoryTheme","material","maxDomain","tickValues","style","dependentAxis","dataComponent","labelComponent","dy","size","orientation","gutter","text","textAnchor","verticalAnchor","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"88mCAAe,GACX,CACIA,MAAO,CAAC,YACRC,KAAM,WACNC,OAAQ,CACJC,KAAM,SACNC,KAAM,WAGd,CACIJ,MAAO,CAAC,QACRC,KAAM,OACNC,OAAQ,CACJC,KAAM,SACNC,KAAM,WAGd,CACIJ,MAAO,CAAC,QACRC,KAAM,OACNC,OAAQ,CACJC,KAAM,SACNC,KAAM,WAGd,CACIJ,MAAO,CAAC,QACRC,KAAM,OACNC,OAAQ,CACJC,KAAM,QACNC,KAAM,WAGd,CACIJ,MAAO,CAAC,MACRC,KAAM,KACNC,OAAQ,CACJC,KAAM,OACNC,KAAM,WAGd,CACIJ,MAAO,CAAC,QACRC,KAAM,OACNC,OAAQ,CACJC,KAAM,QACNC,KAAM,WAGd,CACIJ,MAAO,CAAC,QAAQ,SAChBC,KAAM,SACNC,OAAQ,CACJC,KAAM,SACNC,KAAM,YCZHC,E,iLApBD,IAAD,EACiBC,KAAKC,MAApBC,EADF,EACEA,EAAGC,EADL,EACKA,EAAGC,EADR,EACQA,MACbC,QAAQC,IAAIN,KAAKC,OACjB,IAAML,EArBI,SAAmBQ,GAAO,IAAD,uBACvC,IAAI,IAAJ,IAA4BG,EAA5B,+CAAoC,CAAC,IAA3BC,EAA0B,+BAChC,IAAI,IAAJ,IAAmBA,EAAed,MAAlC,+CAAwC,CAAC,IAA/BA,EAA8B,QACpC,GAAiC,IAA9BU,EAAMN,KAAKW,QAAQf,GAClB,OAAOc,EAAeZ,QAHE,oFADG,kFAWvC,OAFAS,QAAQC,IAAR,gCAAqCF,EAAMN,OAEpC,CACHA,KAAM,SACND,KAAM,SAQSa,CAAUN,GAEzB,OACI,0BACIF,EAAGA,EACHC,EAAGA,EACHQ,SAAU,EACVd,KAAMD,EAAOC,KACbe,UAAW,SACXC,MAAO,GAENjB,EAAOE,U,GAfDgB,IAAMC,W,SCLvBC,EAAa,IAEbC,EAAS,CACXC,WAAY,CACRP,SAAU,EACVd,KAAM,OACNsB,YAAa,GAEjBC,MAAO,CACHC,WAAY,CACRV,SAAU,GAEdW,KAAM,CACFC,OAAQ,SAGhBC,MAAO,CACHH,WAAY,CACRV,SAAU,GAEdW,KAAM,CACFC,OAAQ,SAGhBE,QAAS,CACLC,OAAQ,CACJf,SAAU,IACVd,KAAM,SAGd8B,OAAQ,CACJC,OAAQ,CACJL,OAAQ,SAEZG,OAAQ,CACJG,MAAO,OACPlB,SAAU,IAGlBmB,cAAe,CACXC,KAAM,CACFR,OAAQ,QACRJ,YAAa,GACba,gBAAiB,GAErBN,OAAQ,CACJO,OAAQ,GACRpC,KAAM,QACNc,SAAU,KAoKPuB,MArGf,WACI,IAAMC,EA3BCJ,EAAKK,KAAI,SAACC,GACb,IAAIA,EAAQC,OACR,OAAO,EAGX,GAAGD,EAAQ,cAAcE,SAAS,eAC9B,OAAO,EAGX,IAAMC,EAAU,eACTH,EADS,CAEZ,oBAAqBI,OAAOJ,EAAQ,sBACpC,OAAUI,OAAOJ,EAAO,SA5CpC,SAAwB1C,GAEpB,GAAGA,EAAK4C,SAAS,QACb,MAAO,CACHzC,KAAM,QACNH,KAAMA,EAAK+C,QAAS,QAAS,KAIrC,GAAG/C,EAAK4C,SAAS,SACb,MAAO,CACHzC,KAAM,QACNH,KAAMA,EAAK+C,QAAS,SAAU,KAItC,GAAG/C,EAAK4C,SAAS,SACb,MAAO,CACHzC,KAAM,QACNH,KAAMA,EAAK+C,QAAS,SAAU,KAItC,IAAMC,EAAUhD,EAAKD,MAAO,qCAE5B,MAAO,CACHI,KAAM6C,EAAS,GACfhD,KAAMA,EAAK+C,QAAL,UAAiBC,EAAS,IAAO,IAAKC,QAkBrCC,CAAeR,EAAQ,gBAQ9B,OALGG,EAAWF,OAAStB,IACnBwB,EAAW7C,KAAX,UAAqB6C,EAAW7C,KAAhC,aAAyC6C,EAAWF,OAApD,KACAE,EAAWF,OAAStB,GAGjBwB,KACRM,OAAOC,SAMV,OACI,yBAAKC,UAAU,OACX,kBAAC,IAAD,CACIC,cAAe,GACfC,QAAS,GACTC,OAAQ,IACRC,MAAOC,IAAaC,SACpBC,UAAa,CACTpD,EAAG,GACHD,EAAGc,IAGP,kBAAC,IAAD,CACIwC,WAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACvHC,MAASxC,EAAOG,QAEpB,kBAAC,IAAD,CACIsC,eAAa,EACbF,WAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACrCC,MAASxC,EAAOO,QAEpB,kBAAC,IAAD,CACImC,cAAiB,kBAAC,EAAD,MACjBF,MAAOxC,EAAOQ,QACdmC,eAAgB,kBAAC,IAAD,CAAcC,IAAK,IACnCnC,OAAQ,YACJ,OADmB,EAAZtB,MACMT,MAEjBmE,KAAM,EACN/B,KAAOI,EACPjC,EAAE,SACFC,EAAE,sBAEN,kBAAC,IAAD,CACID,EAAG,IACHC,EAAG,GACH4D,YAAY,WACZC,OAAQ,GACRP,MAAOxC,EAAOU,OACdI,KAAMxB,IAEV,kBAAC,IAAD,CACIkD,MAAOxC,EAAOa,cACdJ,OAAQ,CAAC,YACTkC,eACI,kBAAC,IAAD,CACIzD,EAAG,IACHD,EAAG,MAGXA,EAAG,kBAAM,MAEb,kBAAC,IAAD,CACI+D,KAAK,UACLR,MAAQxC,EAAOC,WACfd,MAAO,CAAEF,EAAG,EAAGC,EAAG,IAClB+D,WAAW,QACXC,eAAe,QAEnB,kBAAC,IAAD,CACIF,KAAK,UACLR,MAAQxC,EAAOC,WACfd,MAAO,CAAEF,EAAG,EAAGC,EAAG,IAClB+D,WAAW,QACXC,eAAe,QAEnB,kBAAC,IAAD,CACIF,KAAK,UACLR,MAAQxC,EAAOC,WACfd,MAAO,CAAEF,EAAG,EAAGC,EAAG,IAClB+D,WAAW,QACXC,eAAe,QAEnB,kBAAC,IAAD,CACIF,KAAK,UACLR,MAAQxC,EAAOC,WACfd,MAAO,CAAEF,EAAG,EAAGC,EAAG,IAClB+D,WAAW,QACXC,eAAe,QAEnB,kBAAC,IAAD,CACIF,KAAK,UACLR,MAAQxC,EAAOC,WACfd,MAAO,CAAEF,EAAG,EAAGC,EAAG,IAClB+D,WAAW,QACXC,eAAe,QAEnB,kBAAC,IAAD,CACIF,KAAK,UACLR,MAAQxC,EAAOC,WACfd,MAAO,CAAEF,EAAG,EAAGC,EAAG,IAClB+D,WAAW,QACXC,eAAe,WCjNfpB,QACW,cAA7BqB,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS5E,MACvB,2DCZN6E,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.05fd3fb6.chunk.js","sourcesContent":["export default [\n    {\n        match: ['7.62x54R'],\n        name: '7.62x54R',\n        symbol: {\n            fill: 'tomato',\n            type: '▲',\n        },\n    },\n    {\n        match: ['7.62'],\n        name: '7.62',\n        symbol: {\n            fill: 'tomato',\n            type: '■',\n        },\n    },\n    {\n        match: ['5.56'],\n        name: '5.56',\n        symbol: {\n            fill: 'yellow',\n            type: '▬',\n        },\n    },\n    {\n        match: ['5.45'],\n        name: '5.45',\n        symbol: {\n            fill: 'green',\n            type: '▼',\n        },\n    },\n    {\n        match: ['9x'],\n        name: '9x',\n        symbol: {\n            fill: 'blue',\n            type: '◆',\n        },\n    },\n    {\n        match: ['12.7'],\n        name: '12.7',\n        symbol: {\n            fill: 'white',\n            type: '●',\n        },\n    },\n    {\n        match: ['12/70','20/70'],\n        name: 'Shells',\n        symbol: {\n            fill: 'yellow',\n            type: '◖',\n        },\n    },\n];\n","import React from 'react';\n\nimport symbols from './symbols';\n\nconst getSymbol = function getSymbol(datum){\n    for(const symbolSettings of symbols){\n        for(const match of symbolSettings.match){\n            if(datum.type.indexOf(match) === 0){\n                return symbolSettings.symbol;\n            }\n        }\n    }\n    \n    console.log(`No symbol defined for ${datum.type}`);\n    \n    return {\n        type: '◢',\n        fill: 'green'\n    };\n};\n\nclass CatPoint extends React.Component {\n    render() {\n        const {x, y, datum} = this.props;\n        console.log(this.props);\n        const symbol = getSymbol(datum);\n        \n        return (\n            <text\n                x={x}\n                y={y}\n                fontSize={5}\n                fill={symbol.fill}\n                textAlign= 'center'\n                width={5}\n            >\n                {symbol.type}\n            </text>\n        );\n    }\n} \n    \nexport default CatPoint;\n","import React from 'react';\nimport { \n    VictoryChart,\n    VictoryScatter,\n    VictoryTheme,\n    VictoryLegend,\n    VictoryLine,\n    VictoryLabel,\n    VictoryAxis\n} from 'victory';\n\nimport './App.css';\nimport Symbol from './Symbol.jsx';\nimport symbols from './symbols';\nimport data from './data.json';\n\nconst MAX_DAMAGE = 200;\n\nconst styles = {\n    classLabel: {\n        fontSize: 3,\n        fill: '#ddd',\n        strokeWidth: 1,\n    },\n    xaxis: {\n        tickLabels: {\n            fontSize: 5,\n        },\n        grid: {\n            stroke: '#555',\n        },\n    },\n    yaxis: {\n        tickLabels: {\n            fontSize: 5,\n        },\n        grid: {\n            stroke: '#ddd',\n        },\n    },\n    scatter: {\n        labels: {\n            fontSize: 2.5,\n            fill: '#fff',\n        },\n    },\n    legend: {\n        border: { \n            stroke: \"black\",\n        },\n        labels: {\n            color: '#fff',\n            fontSize: 5,\n        }\n    },\n    annoationLine: {\n        data: {\n            stroke: \"white\",\n            strokeWidth: 0.5,\n            strokeDasharray: 1,\n        },\n        labels: {\n            angle: -90,\n            fill: \"white\",\n            fontSize: 5,\n        }\n    },\n};\n\nfunction getTypeAndName(name) {\n    \n    if(name.includes('.366')) {\n        return {\n            type: '0.366',\n            name: name.replace( '.366 ', '' ),\n        };\n    }\n    \n    if(name.includes('12/70')) {\n        return {\n            type: '12/70',\n            name: name.replace( '12/70 ', '' ),\n        };\n    }\n    \n    if(name.includes('20/70')) {\n        return {\n            type: '20/70',\n            name: name.replace( '20/70 ', '' ),\n        };\n    }\n    \n    const matches = name.match( /\\d{1,2}(\\.\\d{1,2})?x\\d*(\\s?mm)?R?/ );\n    \n    return {\n        type: matches[ 0 ],\n        name: name.replace( `${matches[ 0 ]}`, '' ).trim(),\n    };\n}\n\nfunction parseData(){\n    return data.map((ammoRow) => {\n        if(!ammoRow.Damage){\n            return false;\n        }\n        \n        if(ammoRow['0.12 Patch'].includes('12.7x108 mm')){\n            return false;\n        }\n        \n        const returnData = {\n            ...ammoRow,\n            'Penetration Value': Number(ammoRow['Penetration Value']),\n            'Damage': Number(ammoRow['Damage']),\n            ...getTypeAndName(ammoRow['0.12 Patch']),\n        };\n        \n        if(returnData.Damage > MAX_DAMAGE){\n            returnData.name = `${returnData.name} (${returnData.Damage})`;\n            returnData.Damage = MAX_DAMAGE;\n        }\n        \n        return returnData;\n    }).filter(Boolean);\n}\n\n\nfunction App() {\n    const localData = parseData();\n    return (\n        <div className=\"App\">\n            <VictoryChart\n                domainPadding={10}\n                padding={20}\n                height={250}\n                theme={VictoryTheme.material}\n                maxDomain = {{\n                    y: 70,\n                    x: MAX_DAMAGE,\n                }}\n            >\n                <VictoryAxis\n                    tickValues={[10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190, 200, 210, 220, 230, 240]}\n                    style = {styles.xaxis}\n                />\n                <VictoryAxis\n                    dependentAxis\n                    tickValues={[10, 20, 30, 40, 50, 60, 70]}\n                    style = {styles.yaxis}\n                />\n                <VictoryScatter\n                    dataComponent = {<Symbol />}\n                    style={styles.scatter}\n                    labelComponent={<VictoryLabel dy={-3} />}\n                    labels={({ datum }) => {\n                        return datum.name;\n                    }}\n                    size={1}\n                    data={ localData }\n                    x=\"Damage\"\n                    y=\"Penetration Value\"\n                />\n                <VictoryLegend\n                    x={290}\n                    y={20}\n                    orientation=\"vertical\"\n                    gutter={10}\n                    style={styles.legend}\n                    data={symbols}\n                />\n                <VictoryLine\n                    style={styles.annoationLine}\n                    labels={[\"Chest HP\"]}\n                    labelComponent={\n                        <VictoryLabel\n                            y={125}\n                            x={147}\n                        />\n                    }\n                    x={() => 80}\n                />\n                <VictoryLabel\n                    text=\"Class 1\"\n                    style= {styles.classLabel}\n                    datum={{ x: 5, y: 11 }}\n                    textAnchor=\"start\"\n                    verticalAnchor=\"end\"\n                />\n                <VictoryLabel\n                    text=\"Class 2\"\n                    style= {styles.classLabel}\n                    datum={{ x: 5, y: 21 }}\n                    textAnchor=\"start\"\n                    verticalAnchor=\"end\"\n                />\n                <VictoryLabel\n                    text=\"Class 3\"\n                    style= {styles.classLabel}\n                    datum={{ x: 5, y: 31 }}\n                    textAnchor=\"start\"\n                    verticalAnchor=\"end\"\n                />\n                <VictoryLabel\n                    text=\"Class 4\"\n                    style= {styles.classLabel}\n                    datum={{ x: 5, y: 41 }}\n                    textAnchor=\"start\"\n                    verticalAnchor=\"end\"\n                />\n                <VictoryLabel\n                    text=\"Class 5\"\n                    style= {styles.classLabel}\n                    datum={{ x: 5, y: 51 }}\n                    textAnchor=\"start\"\n                    verticalAnchor=\"end\"\n                />\n                <VictoryLabel\n                    text=\"Class 6\"\n                    style= {styles.classLabel}\n                    datum={{ x: 5, y: 61 }}\n                    textAnchor=\"start\"\n                    verticalAnchor=\"end\"\n                />\n            </VictoryChart>\n        </div>\n    );\n}\n    \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
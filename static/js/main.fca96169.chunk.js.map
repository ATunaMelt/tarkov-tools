{"version":3,"sources":["components/points/index.js","components/points/Square.jsx","components/points/Circle.jsx","components/points/TriangleUp.jsx","components/points/TriangleDown.jsx","components/points/Diamond.jsx","components/points/Plus.jsx","components/Symbol.jsx","components/Graph.jsx","components/Ammo.jsx","components/Map.jsx","components/ID.jsx","components/Control.jsx","components/MenuItem.jsx","components/Menu.jsx","components/BarterItem.jsx","components/BarterGroup.jsx","components/Barter.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Square","require","default","Circle","TriangleUp","TriangleDown","Diamond","Plus","this","props","viewBox","xmlns","d","React","Component","Symbol","x","y","datum","PointComponent","shapes","symbol","type","width","height","fill","SIZE","styles","classLabel","fontSize","strokeWidth","xaxis","tickLabels","grid","stroke","axisLabel","padding","yaxis","scatter","labels","legend","border","cursor","title","annoationLine","data","strokeDasharray","angle","LegendLabel","selectedDatumName","style","useMemo","name","textDecoration","Graph","domainPadding","top","bottom","right","left","theme","VictoryTheme","material","maxDomain","yMax","axisLabelComponent","label","tickValues","dependentAxis","dataComponent","labelComponent","dy","size","activeSize","listState","legendData","selectedLegendName","events","target","eventHandlers","onClick","handleLegendClick","gutter","orientation","text","textAnchor","verticalAnchor","formattedData","rawData","map","ammoData","returnData","damage","penetration","sort","a","b","localeCompare","typeCache","ammo","includes","push","filter","Boolean","Ammo","currentAmmo","useParams","history","useHistory","useState","setSelectedLegendName","useEffect","useCallback","event","className","Date","updated","toLocaleDateString","maps","Object","fromEntries","rawMapData","mapData","key","image","Map","currentMap","alt","displayText","src","ID","sessionID","ammoTypes","Set","Control","connectionText","setConnectionText","connectID","setConnectID","inputRef","useRef","onChange","send","value","ammoType","maxLength","minLength","tempConnectID","trim","toUpperCase","substring","setID","placeholder","ref","disabled","socketConnected","length","current","focus","document","querySelector","MenuItem","to","children","Menu","href","BarterItem","imgClass","slots","imgSrc","rotate","encodeURIComponent","formatPrice","price","Intl","NumberFormat","currency","maximumSignificantDigits","format","BarterGroup","inputArray","chunkLength","items","pricePerSlot","item","img","groupNames","sortedItems","barterItems","itemA","itemB","itemChunks","reduce","resultArray","index","chunkIndex","Math","floor","i","Barter","socket","App","result","characters","charactersLength","charAt","random","makeID","setSessionID","setSocketConnected","connect","WebSocket","heartbeat","clearTimeout","pingTimeout","setTimeout","terminate","addEventListener","rawMessage","JSON","parse","stringify","message","handleDisplayMessage","console","log","setInterval","readyState","messageData","exact","path","newID","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fca96169.chunk.js","sourcesContent":["module.exports = {\n    Square: require('./Square').default,\n    Circle: require('./Circle').default,\n    TriangleUp: require('./TriangleUp').default,\n    TriangleDown: require('./TriangleDown').default,\n    Diamond: require('./Diamond').default,\n    Plus: require('./Plus').default,\n};\n","import React from 'react';\n\nclass Square extends React.Component {\n    render() {\n        return (\n            <svg\n                {...this.props}\n                viewBox=\"0 0 300 300\"\n                xmlns=\"http://www.w3.org/2000/svg\" \n            >\n                <path\n                    d=\"M0 0,L0 300,L300 300,L300 0, Z\"\n                />\n            </svg>\n        );\n    }\n};\n\nexport default Square;\n","import React from 'react';\n\nclass Circle extends React.Component {\n    render() {\n        return (\n            <svg\n                {...this.props}\n                viewBox=\"0 0 200 200\"\n                xmlns=\"http://www.w3.org/2000/svg\" \n            >\n                <path \n                    d=\"\n                        M 100, 100\n                        m -75, 0\n                        a 75,75 0 1,0 150,0\n                        a 75,75 0 1,0 -150,0\n                    \"\n                />\n            </svg>\n        );\n    }\n};\n\nexport default Circle;\n","import React from 'react';\n\nclass TriangleUp extends React.Component {\n    render() {\n        return (\n            <svg\n                {...this.props}\n                viewBox=\"0 0 300 300\"\n                xmlns=\"http://www.w3.org/2000/svg\" \n            >\n                <path\n                    d=\"M0 300\n                    L300 300\n                    L150 0\n                    Z\"\n                />\n            </svg>\n        );\n    }\n};\n\nexport default TriangleUp;\n","import React from 'react';\n\nclass TriangleUp extends React.Component {\n    render() {\n        return (\n            <svg\n                {...this.props}\n                viewBox=\"0 0 300 300\"\n                xmlns=\"http://www.w3.org/2000/svg\" \n            >\n                <path\n                    d=\"M0 0\n                    L300 0\n                    L150 300\n                    Z\"\n                />\n            </svg>\n        );\n    }\n};\n\nexport default TriangleUp;\n","import React from 'react';\n\nclass TriangleUp extends React.Component {\n    render() {\n        return (\n            <svg\n                {...this.props}\n                viewBox=\"0 0 300 300\"\n                xmlns=\"http://www.w3.org/2000/svg\" \n            >\n                <path\n                    d=\"M0 150\n                    L150 0\n                    L300 150\n                    L150 300\n                    Z\"\n                />\n            </svg>\n        );\n    }\n};\n\nexport default TriangleUp;\n","import React from 'react';\n\nclass Plus extends React.Component {\n    render() {\n        return (\n            <svg\n                {...this.props}\n                viewBox=\"0 0 300 300\"\n                xmlns=\"http://www.w3.org/2000/svg\" \n            >\n                <path\n                    d=\"\n                    M125 0\n                    L175 0\n                    L175 125\n                    L300 125\n                    L300 175\n                    L175 175\n                    L175 300\n                    L125 300\n                    L125 175\n                    L0   175\n                    L0   125\n                    L125 125\n                    Z\"\n                />\n            </svg>\n        );\n    }\n};\n\nexport default Plus;\n","import React from 'react';\n\nimport shapes from './points';\n\nconst SIZE = 2;\n\nclass Symbol extends React.Component {\n    render() {\n        const {x, y, datum} = this.props;\n        const PointComponent = shapes[datum.symbol.type];\n        \n        return (\n            <PointComponent\n                width={SIZE}\n                height={SIZE}\n                fill={datum.symbol.fill}\n                x={x - SIZE / 2}\n                y={y - SIZE / 2}\n            />\n        );\n    }\n} \nexport default Symbol;\n","import React, {useMemo} from 'react';\nimport {\n    VictoryChart,\n    VictoryScatter,\n    VictoryTheme,\n    VictoryLegend,\n    VictoryLine,\n    VictoryLabel,\n    VictoryAxis,\n} from 'victory';\n\nimport Symbol from './Symbol.jsx';\n\nconst styles = {\n    classLabel: {\n        fontSize: 3,\n        fill: '#ddd',\n        strokeWidth: 1,\n    },\n    xaxis: {\n        tickLabels: {\n            fontSize: 5,\n        },\n        grid: {\n            stroke: '#555',\n        },\n        axisLabel: {\n            fontSize: 4, \n            padding: 5,\n            fill: '#ccc',\n        },\n    },\n    yaxis: {\n        tickLabels: {\n            fontSize: 5,\n        },\n        grid: {\n            stroke: '#555',\n        },\n        axisLabel: {\n            fontSize: 4, \n            padding: 5,\n            fill: '#ccc',\n        },\n    },\n    scatter: {\n        labels: {\n            fontSize: 2.5,\n            fill: '#ccc',\n        },\n    },\n    legend: {\n        border: {\n            stroke: \"black\",\n            fill: '#292525',\n            width: 33,\n        },\n        labels: {\n            fill: '#ccc',\n            fontSize: 3,\n            cursor: 'pointer',\n        },\n        title: {\n            fill: '#ccc',\n            fontSize: 4,\n            padding: 2\n        },\n    },\n    annoationLine: {\n        data: {\n            stroke: \"#888\",\n            strokeWidth: 0.5,\n            strokeDasharray: 1,\n        },\n        labels: {\n            angle: -90,\n            fill: \"#ccc\",\n            fontSize: 3,\n        }\n    },\n};\n\nconst LegendLabel = props => {\n    const { selectedDatumName, datum } = props;\n    const style = useMemo(() => {\n        let style = props.style;\n\n        if (selectedDatumName === datum.name) {\n            style = {\n                ...props.style,\n                textDecoration: \"underline\",\n                fill: \"#fff\"\n            };\n        }\n\n        return style;\n    }, [selectedDatumName, datum.name, props.style]);\n\n    return <VictoryLabel {...props} style={style} />;\n};\n\nconst Graph = props => {\n    return (\n        <VictoryChart\n            domainPadding={10}\n            padding={{\n                top: 10,\n                bottom: 20,\n                right: 50,\n                left: 20,\n            }}\n            height={180}\n            theme={VictoryTheme.material}\n            maxDomain = {{\n                y: 70,\n                x: props.yMax,\n            }}\n            // containerComponent={<VictoryVoronoiContainer/>}\n            // animate={{ duration: 2000, easing: \"bounce\" }}\n        >\n            <VictoryAxis\n                axisLabelComponent={<VictoryLabel x={177}/>}\n                label = 'Damage'\n                tickValues={[10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190, 200, 210, 220, 230, 240]}\n                style = {styles.xaxis}\n            />\n            <VictoryAxis\n                dependentAxis\n                label = 'Penetration'\n                tickValues={[10, 20, 30, 40, 50, 60, 70]}\n                style = {styles.yaxis}\n            />\n            <VictoryScatter\n                dataComponent = {<Symbol />}\n                style={styles.scatter}\n                // labelComponent={<VictoryLabel dy={-3} />}\n                labelComponent={<VictoryLabel dy={-3} />}\n                labels={({ datum }) => {\n                    return datum.name;\n                }}\n                size={1}\n                activeSize={5}\n                data={props.listState}\n                x=\"damage\"\n                y=\"penetration\"\n            />\n            <VictoryScatter\n                dataComponent = {<Symbol />}\n                style={styles.scatter}\n                labelComponent={<VictoryLabel dy={-3} />}\n                // labelComponent={<VictoryTooltip\n                //     labelComponent = {<VictoryLabel dy={-3} />}\n                // />}\n                labels={({ datum }) => {\n                    return datum.name;\n                }}\n                size={1}\n                activeSize={5}\n                data={props.listState}\n                x=\"damage\"\n                y=\"penetration\"\n            />\n            <VictoryLegend\n                data={props.legendData}\n                dataComponent = {<Symbol />}\n                title={'Filter by caliber'}\n                labelComponent={<LegendLabel selectedDatumName={props.selectedLegendName} />}\n                events={[\n                    {\n                        target: \"labels\",\n                        eventHandlers: {\n                            onClick: props.handleLegendClick\n                        }\n                    }\n                ]}\n                gutter={10}\n                orientation=\"vertical\"\n                style={styles.legend}\n                x={312}\n                y={9}\n            />\n            <VictoryLine\n                style={styles.annoationLine}\n                labels={[\"Chest HP\"]}\n                labelComponent={\n                    <VictoryLabel\n                        y={85}\n                        x={158}\n                    />\n                }\n                x={() => 85}\n            />\n            <VictoryLabel\n                text=\"Class 1\"\n                style= {styles.classLabel}\n                datum={{ x: 5, y: 11 }}\n                textAnchor=\"start\"\n                verticalAnchor=\"end\"\n            />\n            <VictoryLabel\n                text=\"Class 2\"\n                style= {styles.classLabel}\n                datum={{ x: 5, y: 21 }}\n                textAnchor=\"start\"\n                verticalAnchor=\"end\"\n            />\n            <VictoryLabel\n                text=\"Class 3\"\n                style= {styles.classLabel}\n                datum={{ x: 5, y: 31 }}\n                textAnchor=\"start\"\n                verticalAnchor=\"end\"\n            />\n            <VictoryLabel\n                text=\"Class 4\"\n                style= {styles.classLabel}\n                datum={{ x: 5, y: 41 }}\n                textAnchor=\"start\"\n                verticalAnchor=\"end\"\n            />\n            <VictoryLabel\n                text=\"Class 5\"\n                style= {styles.classLabel}\n                datum={{ x: 5, y: 51 }}\n                textAnchor=\"start\"\n                verticalAnchor=\"end\"\n            />\n            <VictoryLabel\n                text=\"Class 6\"\n                style= {styles.classLabel}\n                datum={{ x: 5, y: 61 }}\n                textAnchor=\"start\"\n                verticalAnchor=\"end\"\n            />\n        </VictoryChart>\n    );\n}\n\nexport default Graph;\n","/* eslint-disable no-restricted-globals */\nimport React, { useState, useMemo, useCallback, useEffect } from 'react';\nimport {\n    useParams,\n    useHistory,\n  } from \"react-router-dom\";\n\nimport Graph from './Graph.jsx';\n\nimport rawData from '../data.json';\n\nconst MAX_DAMAGE = 170;\nconst MAX_PENETRATION = 70;\n\nconst formattedData = rawData.data.map((ammoData) => {\n    const returnData = {\n        ...ammoData,\n    };\n    \n    if(ammoData.damage > MAX_DAMAGE){\n        returnData.name = `${ammoData.name} (${ammoData.damage})`;\n        returnData.damage = MAX_DAMAGE;\n    }\n    \n    if(ammoData.penetration > MAX_PENETRATION){\n        returnData.name = `${ammoData.name} (${ammoData.penetration})`;\n        returnData.penetration = MAX_PENETRATION;\n    }\n    \n    return returnData;\n})\n.sort((a, b) => {\n    return a.type.localeCompare(b.type);\n});\n\nlet typeCache = [];\nconst legendData = formattedData.map((ammo) => {\n    if (typeCache.includes(ammo.type)){\n        return false;\n    }\n\n    typeCache.push(ammo.type);\n\n    return {\n        name: ammo.type,\n        symbol: ammo.symbol,\n    }\n}).filter(Boolean);\n\nfunction Ammo() {\n    const {currentAmmo} = useParams();\n    const history = useHistory();\n    const [selectedLegendName, setSelectedLegendName] = useState(currentAmmo);\n    \n    useEffect(() => {\n        if(currentAmmo === 'all'){\n            setSelectedLegendName();\n            \n            return true;\n        }\n        \n        setSelectedLegendName(currentAmmo);\n    }, [currentAmmo]);\n\n    const listState = useMemo(() => {\n        return formattedData.filter(ammo =>\n            !selectedLegendName || ammo.type === selectedLegendName\n        );\n    }, [selectedLegendName]);\n\n    const handleLegendClick = useCallback((event, { datum: { name } }) => {\n        if (selectedLegendName === name) {\n            setSelectedLegendName();\n            history.push('/ammo/');\n        } else {\n            setSelectedLegendName(name);\n            history.push(`/ammo/${name}`);\n        }\n\n    }, [selectedLegendName, setSelectedLegendName, history]);\n    \n    return (\n        <div>\n            <div\n                className = {'updated-label'}\n            >\n                {`Ammo updated: ${new Date(rawData.updated).toLocaleDateString()}`}        \n            </div>\n            <Graph\n                rawData = {rawData}\n                listState = {listState}\n                legendData = {legendData}\n                selectedLegendName = {selectedLegendName}\n                handleLegendClick = {handleLegendClick}\n                yMax = {MAX_DAMAGE}\n            />\n        </div>\n    );\n}\n\nexport default Ammo;\n","import React from 'react';\nimport {\n    useParams,\n  } from \"react-router-dom\";\n\nimport rawMapData from '../map-data.json';\n\nconst maps = Object.fromEntries(rawMapData.map((mapData) => {\n    return [\n        mapData.key,\n        {\n            ...mapData,\n            image: `/maps/${mapData.key}.jpg`,\n        },\n    ];\n}));\n\nfunction Map() {\n    let {currentMap} = useParams();\n    \n    return <img \n        alt = {`Map of ${maps[currentMap].displayText}`}\n        className = \"map-image\"\n        title = {`Map of ${maps[currentMap].displayText}`}\n        src = {`/tarkov-tools/${maps[currentMap].image}`}\n    />\n}\n\nexport default Map;\n","import React from 'react';\n\nfunction ID(props) {        \n    return <div\n        className=\"id-wrapper\" \n        alt=\"open this page on your phone and connect using this id\"\n        title=\"open this page on your phone and connect using this id\"\n    >\n        <div className=\"update-label\">\n            Code for phone control\n            <span\n                className=\"session-question\"\n            >\n                ?\n                <div\n                    className=\"session-popup\"\n                >\n                    Go to tarkov tools with your phone and enter this ID to control this webpage with your phone        \n                </div>\n            </span>\n        </div>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 35 35\">\n            <path d=\"M25 0H10C8 0 7 1 7 2v31c0 1 1 2 3 2h15c2 0 3-1 3-2V2c0-1-1-2-3-2zM15 2h5-5zm3 32a1 1 0 11-1-3 1 1 0 011 3zm8-3H9V4h17v27z\"/>\n        </svg>\n        <span className=\"session-id\">\n            {props.sessionID}\n        </span>\n    </div>;\n}\n\nexport default ID;\n\n\n","import React, { useState, useRef } from 'react';\n\nimport ammoData from '../data.json';\nimport mapData from '../map-data.json';\n\nconst ammoTypes = [...new Set(ammoData.data.map((ammoData) => {\n    return ammoData.type\n}))].sort();\n\nfunction Control(props) {\n    const [connectionText, setConnectionText] = useState('Connect');\n    const [connectID, setConnectID] = useState();\n    \n    const inputRef = useRef(null);\n    \n    const handleConnectClick = (event) => {\n        if(connectID.length !== 4){            \n            inputRef.current.focus();\n            \n            return true;\n        }\n        \n        setConnectionText(`Connected to ${props.sessionID}`);\n        \n        props.send({\n            type: 'command',\n            data: {\n                type: 'map',\n                value: document.querySelector('[name=\"map\"]').value,\n            },\n        });  \n    };\n    \n    const handleIDChange = (event) => {\n        const tempConnectID = event.target.value.trim().toUpperCase().substring(0, 4);\n        props.setID(tempConnectID);\n        \n        setConnectID(tempConnectID);\n    };\n    \n    const handleMapChange = (event) => {\n        props.send({\n            type: 'command',\n            data: {\n                type: 'map',\n                value: event.target.value,\n            },\n        });\n    };\n    \n    const handleAmmoChange = (event) => {\n        props.send({\n            type: 'command',\n            data: {\n                type: 'ammo',\n                value: event.target.value,\n            }\n        });\n    };\n    \n    return <div className=\"control-wrapper\">\n        <span>View map:</span>\n        <select name=\"map\" onChange={handleMapChange}>\n            {mapData.map(map => \n                <option\n                    key = {map.key}\n                    value = {map.key}\n                >\n                    {map.displayText}\n                </option>\n            )} \n        </select>\n        <span>View caliber:</span>\n        <select name=\"ammo\" onChange={handleAmmoChange}>\n            {ammoTypes.map((ammoType) => (\n                <option\n                    key = {ammoType}\n                    value = {ammoType}\n                >\n                    {ammoType}\n                </option>\n            ))}\n        </select>\n        <div className=\"info-wrapper\">\n            Load this page in another browser to control it from here\n        </div>\n        <div className=\"connection-wrapper\">\n            <input\n                maxLength = \"4\"\n                minLength = \"4\"\n                name = \"session-id\"\n                onChange = {handleIDChange}\n                placeholder = \"desktop id\"\n                ref = {inputRef}\n                type = \"text\"\n            />\n            <input \n                disabled = {!props.socketConnected}\n                onClick = {handleConnectClick}\n                type = \"submit\"\n                value = {connectionText} \n            />\n        </div>\n    </div>\n}\n\nexport default Control;\n\n\n","import React from 'react';\nimport {\n    Link\n  } from \"react-router-dom\";\n  \nfunction MenuItem(props) {        \n    return <li>\n        <Link \n            to = {props.to}\n        >\n            {props.children}\n        </Link>\n</li>;\n}\n\nexport default MenuItem;\n\n\n","import React from 'react';\nimport {\n    Link\n  } from \"react-router-dom\";\n\nimport MenuItem from './MenuItem';\n\nimport ammoData from '../data.json';\nimport mapData from '../map-data.json';\n\nconst ammoTypes = [...new Set(ammoData.data.map((ammoData) => {\n    return ammoData.type\n}))].sort();\n\nfunction Menu() {    \n    return <div\n            className=\"menu\" \n        >\n            <Link\n                className = \"branding\"\n                to = '/tarkov-tools/'\n            >\n                Tarkov Tools\n            </Link>\n            <div\n                className = \"submenu-button\"\n            >\n                Ammo\n                <ul>\n                {ammoTypes.map(ammoType => \n                    <MenuItem\n                        to = {`/tarkov-tools/ammo/${ammoType}`}\n                        key = {ammoType}\n                    >\n                        {ammoType}\n                    </MenuItem>\n                )} \n                </ul>\n            </div>\n            <div\n                className = \"submenu-button\"\n            >\n                Maps\n                <ul>\n                {mapData.map(map => \n                    <MenuItem\n                        to = {`/tarkov-tools/map/${map.key}`}\n                        key = {map.key}\n                    >\n                        {map.displayText}\n                    </MenuItem>\n                )} \n                </ul>\n            </div>\n            <Link to=\"/tarkov-tools/barter\">\n                Loot tiers\n            </Link>\n            <a \n                href=\"https://developertracker.com/escape-from-tarkov/\"\n            >\n                Dev tracker    \n            </a>\n    </div>;\n}\n\nexport default Menu;\n\n\n","import React from 'react';\n\nfunction BarterItem(props) {   \n    const imgClassBase = 'barter-icon-';\n    let imgClass;\n    switch (props.slots){\n        case 2:\n            imgClass = `${imgClassBase}1x-2x`;    \n            break;\n        case 3:\n            imgClass = `${imgClassBase}1x-3x`;    \n            break;\n        case 4:\n            imgClass = `${imgClassBase}2x-2x`;    \n            break;\n        case 6:\n            imgClass = `${imgClassBase}2x-3x`;    \n            break;\n        case 8:\n            imgClass = `${imgClassBase}2x-4x`;    \n            break;\n        case 9:\n            imgClass = `${imgClassBase}2x-2x`;    \n            break;\n        case 1:\n        default:\n            imgClass = `${imgClassBase}1x-1x`;    \n    };\n    \n    let imgSrc = props.src;\n    \n    if(props.rotate){\n        imgSrc = `//images.weserv.nl/?url=${encodeURIComponent(imgSrc)}&ro=${props.rotate}}`;\n        // imgClass = `${imgClassBase}2x-1x`;\n    }\n    \n    return <img\n        alt = {props.name}\n        title = {props.name}\n        className = {imgClass}\n        src = {imgSrc}\n    />\n}\n\nexport default BarterItem;\n\n\n","import React from 'react';\n\nimport BarterItem from './BarterItem';\n\nconst formatPrice = (price) => {\n    return new Intl.NumberFormat('ru-RU', {\n        style: 'currency',\n        currency: 'RUB',\n        maximumSignificantDigits: 5,\n    }).format(price);\n}\n\nfunction BarterGroup(props) {        \n    return <div\n            className=\"barter-group-wrapper\"\n        >\n            <div\n                className = \"barter-group-title\"\n            >\n                <div\n                    className = \"barter-class-wrapper\"\n                >\n                    {props.name}  \n                </div>\n                <div\n                    className = \"price-range-wrapper\"\n                >\n                    {`${formatPrice(props.items[props.items.length - 1].pricePerSlot)} - ${formatPrice(props.items[0].pricePerSlot)}` }        \n                    <div className=\"note\">\n                        per slot\n                    </div>\n                </div>\n            </div>\n            <div\n                className = \"barter-group-items\"\n            >\n                {props.items.map(item => \n                    <BarterItem\n                        key = {item.name}\n                        name = {item.name}\n                        rotate = {item.rotate}\n                        slots = {item.slots}\n                        src = {item.img}\n                    />\n                )} \n            </div>\n        </div>\n}\n\nexport default BarterGroup;\n\n\n","import React from 'react';\n\nimport barterItems from '../barter-items.json';\nimport BarterGroup from './BarterGroup';\n\nconst groupNames = [\n    'S',\n    'A',\n    'B',\n    'C',\n    'D',\n    'E',\n    'F',\n];\n\nconst arrayChunk = (inputArray, chunkLength) => {\n    return inputArray.reduce((resultArray, item, index) => { \n        const chunkIndex = Math.floor(index / chunkLength);\n    \n        if(!resultArray[chunkIndex]) {\n            resultArray[chunkIndex] = []; // start a new chunk\n        }\n    \n        resultArray[chunkIndex].push(item);\n    \n        return resultArray\n    }, []);\n};\n\nconst sortedItems = barterItems.data.sort((itemA, itemB) => {    \n    if(itemA.pricePerSlot > itemB.pricePerSlot){\n        return -1;\n    }\n    \n    if(itemA.pricePerSlot < itemB.pricePerSlot){\n        return 1;\n    }\n    \n    return 0;\n});\n\nconst itemChunks = arrayChunk(sortedItems, sortedItems.length / 7);\n\nfor(let i = 0; i < itemChunks.length; i = i + 1){\n    itemChunks[i] = itemChunks[i].sort((itemA, itemB) => {\n        if(itemA.slots > itemB.slots){\n            return -1;\n        }\n        \n        if(itemA.slots < itemB.slots){\n            return 1;\n        }\n        \n        return 0;\n    });\n};\n\nfunction Barter() {      \n    return <div\n        className=\"barter-wrapper\" \n    >\n        <div\n            className = {'updated-label'}\n        >\n            {`Prices updated: ${new Date(barterItems.updated).toLocaleDateString()}`}        \n        </div>\n        {itemChunks.map((items, index) => \n            <BarterGroup\n                key = {`barter-group-${groupNames[index]}`}\n                name = {groupNames[index]}\n                items = {items}\n            />\n        )}\n    </div>;\n}\n\nexport default Barter;\n\n\n","/* eslint-disable no-restricted-globals */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport {\n    Switch,\n    Route,\n    useHistory,\n  } from \"react-router-dom\";\n\nimport './App.css';\nimport Ammo from './components/Ammo.jsx';\nimport Map from './components/Map.jsx';\nimport ID from './components/ID.jsx';\nimport Control from './components/Control.jsx';\nimport Menu from './components/Menu.jsx';\nimport Barter from './components/Barter.jsx';\n\nconst makeID = function makeID(length) {\n    let result = '';\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n    const charactersLength = characters.length;\n    \n    for ( let i = 0; i < length; i = i + 1 ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    \n    return result;\n };\n \n const socketServer = `wss://tarkov-socket-server.herokuapp.com`;\n\n let socket = false;\n \n function App() {    \n    const [sessionID, setSessionID] = useState(makeID(4));\n    const [socketConnected, setSocketConnected] = useState(false);\n    let history = useHistory();\n    \n    const setID = (newID) => {\n        setSessionID(newID);\n    };\n    \n    const handleDisplayMessage = (rawMessage) => {\n        const message = JSON.parse(rawMessage.data);\n        \n        if(message.type !== 'command'){\n            return false;\n        }\n        \n        if(message.data.type === 'map'){\n            history.push(`/tarkov-tools/map/${message.data.value}`);\n            \n            return true;\n        }\n        \n        if(message.data.type === 'ammo'){       \n            history.push(`/tarkov-tools/ammo/${message.data.value}`);\n            \n            return true;\n        }\n    };\n    \n    useEffect(() => {        \n        const connect = function connect(){\n            socket = new WebSocket(socketServer);\n\n            const heartbeat = function heartbeat() {\n                clearTimeout(socket.pingTimeout);\n            \n                // Use `WebSocket#terminate()`, which immediately destroys the connection,\n                // instead of `WebSocket#close()`, which waits for the close timer.\n                // Delay should be equal to the interval at which your server\n                // sends out pings plus a conservative assumption of the latency.\n                socket.pingTimeout = setTimeout(() => {\n                    socket.terminate();\n                    setSocketConnected(false);\n                }, 10000 + 1000);\n            };\n            \n            socket.addEventListener('message', (rawMessage) => {\n                const message = JSON.parse(rawMessage.data);\n                \n                if(message.type === 'ping'){\n                    heartbeat();\n                    \n                    socket.send(JSON.stringify({type: 'pong'}));\n                    \n                    return true;\n                }\n                \n                handleDisplayMessage(rawMessage);\n            });\n            \n            socket.addEventListener('open', () => {\n                console.log('Connected to socket server');\n                console.log(socket);\n                \n                heartbeat();\n                \n                setSocketConnected(true);\n                \n                socket.send(JSON.stringify({\n                    sessionID: sessionID,\n                    type: 'connect',\n                }));\n            });   \n            \n            socket.addEventListener('close', () => {\n                console.log('Disconnected from socket server');\n                \n                setSocketConnected(false);\n                \n                clearTimeout(socket.pingTimeout);\n            });\n            \n            setInterval(() => {        \n                if(socket.readyState === 3){\n                    console.log('trying to re-connect');\n                    connect();\n                }\n            }, 5000);\n        };\n        \n        if(socket === false){\n            connect();\n        }\n        \n        return () => {\n            // socket.terminate();\n        };\n    });    \n    \n    const send = useCallback((messageData) => {\n        socket.send(JSON.stringify({\n            sessionID: sessionID,\n            ...messageData,\n        }));\n    }, [sessionID]);\n\n    return <div className=\"App\">\n        <Menu />\n        <div className=\"display-wrapper\">\n            <Switch>\n                <Route\n                    exact\n                    path={[\"/tarkov-tools/ammo/:currentAmmo\", \"/tarkov-tools/ammo\", '/tarkov-tools', \"\"]}\n                >\n                    <Ammo />\n                </Route>\n                <Route path=\"/tarkov-tools/map/:currentMap\">\n                    <Map />\n                </Route>\n                <Route exact path=\"/tarkov-tools/barter\">\n                    <Barter />\n                </Route>\n            </Switch>\n            <ID\n                sessionID = {sessionID}\n            />\n        </div>\n        <Control \n            send = {send}\n            setID = {setID}\n            sessionID = {sessionID}\n            socketConnected = {socketConnected}\n        />\n    </div>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {\n    BrowserRouter as Router,\n  } from \"react-router-dom\";\n\nReactDOM.render((<Router><App /></Router>), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["points/index.js","points/Square.jsx","points/Circle.jsx","points/TriangleUp.jsx","points/TriangleDown.jsx","points/Diamond.jsx","Symbol.jsx","symbols.js","data.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Square","require","default","Circle","TriangleUp","TriangleDown","Diamond","this","props","viewBox","xmlns","d","React","Component","Symbol","x","y","datum","PointComponent","shapes","symbol","type","width","height","fill","SIZE","typeCache","parsedData","rawData","map","ammoRow","Damage","includes","name","replace","matches","match","trim","getTypeAndName","symbols","length","indexOf","push","console","log","Number","filter","Boolean","MAX_DAMAGE","styles","classLabel","fontSize","strokeWidth","xaxis","tickLabels","grid","stroke","axisLabel","padding","yaxis","scatter","labels","legend","border","cursor","annoationLine","data","strokeDasharray","angle","legendData","ammo","LegendLabel","selectedDatumName","style","useMemo","textDecoration","App","useState","selectedLegendName","setSelectedLegendName","listState","handleLegendClick","useCallback","event","className","domainPadding","top","bottom","right","left","theme","VictoryTheme","material","maxDomain","axisLabelComponent","label","tickValues","dependentAxis","dataComponent","labelComponent","dy","size","events","target","eventHandlers","onClick","gutter","orientation","text","textAnchor","verticalAnchor","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6d8ca2e.chunk.js","sourcesContent":["module.exports = {\n    Square: require('./Square').default,\n    Circle: require('./Circle').default,\n    TriangleUp: require('./TriangleUp').default,\n    TriangleDown: require('./TriangleDown').default,\n    Diamond: require('./Diamond').default,\n};\n","import React from 'react';\n\nclass Square extends React.Component {\n    render() {\n        return (\n            <svg\n                {...this.props}\n                viewBox=\"0 0 300 300\"\n                xmlns=\"http://www.w3.org/2000/svg\" \n            >\n                <path\n                    d=\"M0 0,L0 300,L300 300,L300 0, Z\"\n                />\n            </svg>\n        );\n    }\n};\n\nexport default Square;\n","import React from 'react';\n\nclass Circle extends React.Component {\n    render() {\n        return (\n            <svg\n                {...this.props}\n                viewBox=\"0 0 200 200\"\n                xmlns=\"http://www.w3.org/2000/svg\" \n            >\n                <path \n                    d=\"\n                        M 100, 100\n                        m -75, 0\n                        a 75,75 0 1,0 150,0\n                        a 75,75 0 1,0 -150,0\n                    \"\n                />\n            </svg>\n        );\n    }\n};\n\nexport default Circle;\n","import React from 'react';\n\nclass TriangleUp extends React.Component {\n    render() {\n        return (\n            <svg\n                {...this.props}\n                viewBox=\"0 0 300 300\"\n                xmlns=\"http://www.w3.org/2000/svg\" \n            >\n                <path\n                    d=\"M0 225,L150 75,L300 225,Z\"\n                />\n            </svg>\n        );\n    }\n};\n\nexport default TriangleUp;\n","import React from 'react';\n\nclass TriangleUp extends React.Component {\n    render() {\n        return (\n            <svg\n                {...this.props}\n                viewBox=\"0 0 300 300\"\n                xmlns=\"http://www.w3.org/2000/svg\" \n            >\n                <path\n                    d=\"M0 75,L300 75,L150 225,Z\"\n                />\n            </svg>\n        );\n    }\n};\n\nexport default TriangleUp;\n","import React from 'react';\n\nclass TriangleUp extends React.Component {\n    render() {\n        return (\n            <svg\n                {...this.props}\n                viewBox=\"0 0 300 300\"\n                xmlns=\"http://www.w3.org/2000/svg\" \n            >\n                <path\n                    d=\"M0 150,L150 0,L300 150, L150 300,Z\"\n                />\n            </svg>\n        );\n    }\n};\n\nexport default TriangleUp;\n","import React from 'react';\n\nimport shapes from './points/';\n\nconst SIZE = 2;\n\nclass Symbol extends React.Component {\n    render() {\n        const {x, y, datum} = this.props;\n        const PointComponent = shapes[datum.symbol.type];\n        \n        return (\n            <PointComponent\n                width={SIZE}\n                height={SIZE}\n                fill={datum.symbol.fill}\n                x={x - SIZE / 2}\n                y={y - SIZE / 2}\n            />\n        );\n    }\n} \n    \nexport default Symbol;\n","export default [\n    {\n        fill: 'tomato',\n        type: 'Square',\n    },\n    {\n        fill: 'tomato',\n        type: 'Circle',\n    },\n    {\n        fill: 'tomato',\n        type: 'TriangleUp',\n    },\n    {\n        fill: 'tomato',\n        type: 'TriangleDown',\n    },\n    {\n        fill: 'tomato',\n        type: 'Diamond',\n    },{\n        fill: 'yellow',\n        type: 'Square',\n    },\n    {\n        fill: 'yellow',\n        type: 'Circle',\n    },\n    {\n        fill: 'yellow',\n        type: 'TriangleUp',\n    },\n    {\n        fill: 'yellow',\n        type: 'TriangleDown',\n    },\n    {\n        fill: 'yellow',\n        type: 'Diamond',\n    },\n    {\n        fill: 'green',\n        type: 'Square',\n    },\n    {\n        fill: 'green',\n        type: 'Circle',\n    },{\n        fill: 'green',\n        type: 'TriangleUp',\n    },\n    {\n        fill: 'green',\n        type: 'TriangleDown',\n    },\n    {\n        fill: 'green',\n        type: 'Diamond',\n    },\n    {\n        fill: 'blue',\n        type: 'Square',\n    },{\n        fill: 'blue',\n        type: 'Circle',\n    },\n    {\n        fill: 'blue',\n        type: 'TriangleUp',\n    },\n    {\n        fill: 'blue',\n        type: 'TriangleDown',\n    },\n];\n","import rawData from './data.json';\nimport symbols from './symbols';\n\nfunction getTypeAndName(name) {\n    \n    if(name.includes('.366')) {\n        return {\n            type: '0.366',\n            name: name.replace( '.366 ', '' ),\n        };\n    }\n    \n    if(name.includes('12/70')) {\n        return {\n            type: '12/70',\n            name: name.replace( '12/70 ', '' ),\n        };\n    }\n    \n    if(name.includes('20/70')) {\n        return {\n            type: '20/70',\n            name: name.replace( '20/70 ', '' ),\n        };\n    }\n    \n    const matches = name.match( /\\d{1,2}(\\.\\d{1,2})?x\\d*(\\s?mm)?R?/ );\n    \n    return {\n        type: matches[ 0 ].replace( /(\\d)mm/g, '$1 mm'),\n        name: name.replace( `${matches[ 0 ]}`, '' ).trim(),\n    };\n}\nlet typeCache = [];\nconst parsedData = rawData.map((ammoRow) => {\n    if(!ammoRow.Damage){\n        return false;\n    }\n    \n    if(ammoRow['0.12 Patch'].includes('12.7x108 mm')){\n        return false;\n    }\n    \n    const {type, name} = getTypeAndName(ammoRow['0.12 Patch']);\n    \n    let symbol = symbols[typeCache.length];\n    \n    if(typeCache.includes(type)) {\n        symbol = symbols[typeCache.indexOf(type)];\n    } else {\n        typeCache.push(type);\n    }\n    \n    if(!symbol) {\n        console.log(`Missing symbol for ${type}`);\n    }\n    \n    const returnData = {\n        ...ammoRow,\n        'Penetration Value': Number(ammoRow['Penetration Value']),\n        'Damage': Number(ammoRow['Damage']),\n        name: name,\n        type: type,\n        symbol: symbol,\n    };\n    \n    return returnData;\n}).filter(Boolean);\n\nexport default parsedData;\n","import React, { useState, useMemo, useCallback } from 'react';\nimport {\n    VictoryChart,\n    VictoryScatter,\n    VictoryTheme,\n    VictoryLegend,\n    VictoryLine,\n    VictoryLabel,\n    VictoryAxis\n} from 'victory';\n\nimport './App.css';\nimport Symbol from './Symbol.jsx';\nimport data from './data';\n\nconst MAX_DAMAGE = 200;\n\nconst styles = {\n    classLabel: {\n        fontSize: 3,\n        fill: '#ddd',\n        strokeWidth: 1,\n    },\n    xaxis: {\n        tickLabels: {\n            fontSize: 5,\n        },\n        grid: {\n            stroke: '#555',\n        },\n        axisLabel: {\n            fontSize: 4, \n            padding: 5,\n            fill: '#ccc',\n        },\n    },\n    yaxis: {\n        tickLabels: {\n            fontSize: 5,\n        },\n        grid: {\n            stroke: '#555',\n        },\n        axisLabel: {\n            fontSize: 4, \n            padding: 5,\n            fill: '#ccc',\n        },\n    },\n    scatter: {\n        labels: {\n            fontSize: 2.5,\n            fill: '#ccc',\n        },\n    },\n    legend: {\n        border: {\n            stroke: \"black\",\n            fill: '#292525',\n        },\n        labels: {\n            fill: '#ccc',\n            fontSize: 3,\n            cursor: 'pointer',\n        },\n    },\n    annoationLine: {\n        data: {\n            stroke: \"#888\",\n            strokeWidth: 0.5,\n            strokeDasharray: 1,\n        },\n        labels: {\n            angle: -90,\n            fill: \"#ccc\",\n            fontSize: 3,\n        }\n    },\n};\n\nlet typeCache = [];\nconst legendData = data.map((ammo) => {\n    if (typeCache.includes(ammo.type)){\n        return false;\n    }\n\n    typeCache.push(ammo.type);\n\n    return {\n        name: ammo.type,\n        symbol: ammo.symbol,\n    }\n}).filter(Boolean);\n\nconst LegendLabel = props => {\n  const { selectedDatumName, datum } = props;\n  const style = useMemo(() => {\n    let style = props.style;\n\n    if (selectedDatumName === datum.name) {\n      style = {\n        ...props.style,\n        textDecoration: \"underline\",\n        fill: \"#fff\"\n      };\n    }\n\n    return style;\n  }, [selectedDatumName, datum.name, props.style]);\n\n  return <VictoryLabel {...props} style={style} />;\n};\n\n\nfunction App() {\n  const [selectedLegendName, setSelectedLegendName] = useState();\n\n  const listState = useMemo(() => {\n    return data.filter(ammo =>\n      !selectedLegendName || ammo.type === selectedLegendName\n    );\n  }, [selectedLegendName]);\n\n  const handleLegendClick = useCallback((event, { datum: { name } }) => {\n    if (selectedLegendName === name) {\n      setSelectedLegendName();\n    } else {\n      setSelectedLegendName(name);\n    }\n\n  }, [selectedLegendName, setSelectedLegendName]);\n\n\n    return (\n        <div className=\"App\">\n            <VictoryChart\n                domainPadding={10}\n                padding={{\n                    top: 10,\n                    bottom: 20,\n                    right: 10,\n                    left: 20,\n                }}\n                height={180}\n                theme={VictoryTheme.material}\n                maxDomain = {{\n                    y: 70,\n                    x: MAX_DAMAGE,\n                }}\n            >\n                <VictoryAxis\n                    axisLabelComponent={<VictoryLabel x={177}/>}\n                    label = 'Damage'\n                    tickValues={[10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190, 200, 210, 220, 230, 240]}\n                    style = {styles.xaxis}\n                />\n                <VictoryAxis\n                    dependentAxis\n                    label = 'Penetration'\n                    tickValues={[10, 20, 30, 40, 50, 60, 70]}\n                    style = {styles.yaxis}\n                />\n                <VictoryScatter\n                    dataComponent = {<Symbol />}\n                    style={styles.scatter}\n                    labelComponent={<VictoryLabel dy={-3} />}\n                    labels={({ datum }) => {\n                        return datum.name;\n                    }}\n                    size={1}\n                    data={listState}\n                    x=\"Damage\"\n                    y=\"Penetration Value\"\n                />\n                <VictoryLegend\n                    data={legendData}\n                    dataComponent = {<Symbol />}\n                    labelComponent={<LegendLabel selectedDatumName={selectedLegendName} />}\n                    events={[\n                      {\n                        target: \"labels\",\n                        eventHandlers: {\n                          onClick: handleLegendClick\n                        }\n                      }\n                    ]}\n                    gutter={10}\n                    orientation=\"vertical\"\n                    style={styles.legend}\n                    x={315}\n                    y={5}\n                />\n                <VictoryLine\n                    style={styles.annoationLine}\n                    labels={[\"Chest HP\"]}\n                    labelComponent={\n                        <VictoryLabel\n                            y={85}\n                            x={151}\n                        />\n                    }\n                    x={() => 80}\n                />\n                <VictoryLabel\n                    text=\"Class 1\"\n                    style= {styles.classLabel}\n                    datum={{ x: 5, y: 11 }}\n                    textAnchor=\"start\"\n                    verticalAnchor=\"end\"\n                />\n                <VictoryLabel\n                    text=\"Class 2\"\n                    style= {styles.classLabel}\n                    datum={{ x: 5, y: 21 }}\n                    textAnchor=\"start\"\n                    verticalAnchor=\"end\"\n                />\n                <VictoryLabel\n                    text=\"Class 3\"\n                    style= {styles.classLabel}\n                    datum={{ x: 5, y: 31 }}\n                    textAnchor=\"start\"\n                    verticalAnchor=\"end\"\n                />\n                <VictoryLabel\n                    text=\"Class 4\"\n                    style= {styles.classLabel}\n                    datum={{ x: 5, y: 41 }}\n                    textAnchor=\"start\"\n                    verticalAnchor=\"end\"\n                />\n                <VictoryLabel\n                    text=\"Class 5\"\n                    style= {styles.classLabel}\n                    datum={{ x: 5, y: 51 }}\n                    textAnchor=\"start\"\n                    verticalAnchor=\"end\"\n                />\n                <VictoryLabel\n                    text=\"Class 6\"\n                    style= {styles.classLabel}\n                    datum={{ x: 5, y: 61 }}\n                    textAnchor=\"start\"\n                    verticalAnchor=\"end\"\n                />\n            </VictoryChart>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
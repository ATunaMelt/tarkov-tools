{"version":3,"sources":["components/points/index.js","components/points/Square.jsx","components/points/Circle.jsx","components/points/TriangleUp.jsx","components/points/TriangleDown.jsx","components/points/Diamond.jsx","components/points/Plus.jsx","components/Symbol.jsx","components/Graph.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Square","require","default","Circle","TriangleUp","TriangleDown","Diamond","Plus","this","props","viewBox","xmlns","d","React","Component","Symbol","x","y","datum","PointComponent","shapes","symbol","type","width","height","fill","SIZE","styles","classLabel","fontSize","strokeWidth","xaxis","tickLabels","grid","stroke","axisLabel","padding","yaxis","scatter","labels","legend","border","cursor","title","annoationLine","data","strokeDasharray","angle","LegendLabel","selectedDatumName","style","useMemo","name","textDecoration","Graph","domainPadding","top","bottom","right","left","theme","VictoryTheme","material","maxDomain","yMax","axisLabelComponent","label","tickValues","dependentAxis","dataComponent","labelComponent","dy","size","activeSize","listState","legendData","selectedLegendName","events","target","eventHandlers","onClick","handleLegendClick","gutter","orientation","text","textAnchor","verticalAnchor","updatedLabel","position","color","formattedData","rawData","map","ammoData","returnData","damage","sort","a","b","localeCompare","typeCache","ammo","includes","push","filter","Boolean","App","useState","setSelectedLegendName","useCallback","event","className","Date","updated","toLocaleDateString","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1114ee2e.chunk.js","sourcesContent":["module.exports = {\n    Square: require('./Square').default,\n    Circle: require('./Circle').default,\n    TriangleUp: require('./TriangleUp').default,\n    TriangleDown: require('./TriangleDown').default,\n    Diamond: require('./Diamond').default,\n    Plus: require('./Plus').default,\n};\n","import React from 'react';\n\nclass Square extends React.Component {\n    render() {\n        return (\n            <svg\n                {...this.props}\n                viewBox=\"0 0 300 300\"\n                xmlns=\"http://www.w3.org/2000/svg\" \n            >\n                <path\n                    d=\"M0 0,L0 300,L300 300,L300 0, Z\"\n                />\n            </svg>\n        );\n    }\n};\n\nexport default Square;\n","import React from 'react';\n\nclass Circle extends React.Component {\n    render() {\n        return (\n            <svg\n                {...this.props}\n                viewBox=\"0 0 200 200\"\n                xmlns=\"http://www.w3.org/2000/svg\" \n            >\n                <path \n                    d=\"\n                        M 100, 100\n                        m -75, 0\n                        a 75,75 0 1,0 150,0\n                        a 75,75 0 1,0 -150,0\n                    \"\n                />\n            </svg>\n        );\n    }\n};\n\nexport default Circle;\n","import React from 'react';\n\nclass TriangleUp extends React.Component {\n    render() {\n        return (\n            <svg\n                {...this.props}\n                viewBox=\"0 0 300 300\"\n                xmlns=\"http://www.w3.org/2000/svg\" \n            >\n                <path\n                    d=\"M0 300\n                    L300 300\n                    L150 0\n                    Z\"\n                />\n            </svg>\n        );\n    }\n};\n\nexport default TriangleUp;\n","import React from 'react';\n\nclass TriangleUp extends React.Component {\n    render() {\n        return (\n            <svg\n                {...this.props}\n                viewBox=\"0 0 300 300\"\n                xmlns=\"http://www.w3.org/2000/svg\" \n            >\n                <path\n                    d=\"M0 0\n                    L300 0\n                    L150 300\n                    Z\"\n                />\n            </svg>\n        );\n    }\n};\n\nexport default TriangleUp;\n","import React from 'react';\n\nclass TriangleUp extends React.Component {\n    render() {\n        return (\n            <svg\n                {...this.props}\n                viewBox=\"0 0 300 300\"\n                xmlns=\"http://www.w3.org/2000/svg\" \n            >\n                <path\n                    d=\"M0 150\n                    L150 0\n                    L300 150\n                    L150 300\n                    Z\"\n                />\n            </svg>\n        );\n    }\n};\n\nexport default TriangleUp;\n","import React from 'react';\n\nclass Plus extends React.Component {\n    render() {\n        return (\n            <svg\n                {...this.props}\n                viewBox=\"0 0 300 300\"\n                xmlns=\"http://www.w3.org/2000/svg\" \n            >\n                <path\n                    d=\"\n                    M125 0\n                    L175 0\n                    L175 125\n                    L300 125\n                    L300 175\n                    L175 175\n                    L175 300\n                    L125 300\n                    L125 175\n                    L0   175\n                    L0   125\n                    L125 125\n                    Z\"\n                />\n            </svg>\n        );\n    }\n};\n\nexport default Plus;\n","import React from 'react';\n\nimport shapes from './points';\n\nconst SIZE = 2;\n\nclass Symbol extends React.Component {\n    render() {\n        const {x, y, datum} = this.props;\n        const PointComponent = shapes[datum.symbol.type];\n        \n        return (\n            <PointComponent\n                width={SIZE}\n                height={SIZE}\n                fill={datum.symbol.fill}\n                x={x - SIZE / 2}\n                y={y - SIZE / 2}\n            />\n        );\n    }\n} \nexport default Symbol;\n","import React, {useMemo} from 'react';\nimport {\n    VictoryChart,\n    VictoryScatter,\n    VictoryTheme,\n    VictoryLegend,\n    VictoryLine,\n    VictoryLabel,\n    VictoryAxis,\n    // VictoryVoronoiContainer,\n    // VictoryTooltip\n} from 'victory';\n\nimport Symbol from './Symbol.jsx';\n\nconst styles = {\n    classLabel: {\n        fontSize: 3,\n        fill: '#ddd',\n        strokeWidth: 1,\n    },\n    xaxis: {\n        tickLabels: {\n            fontSize: 5,\n        },\n        grid: {\n            stroke: '#555',\n        },\n        axisLabel: {\n            fontSize: 4, \n            padding: 5,\n            fill: '#ccc',\n        },\n    },\n    yaxis: {\n        tickLabels: {\n            fontSize: 5,\n        },\n        grid: {\n            stroke: '#555',\n        },\n        axisLabel: {\n            fontSize: 4, \n            padding: 5,\n            fill: '#ccc',\n        },\n    },\n    scatter: {\n        labels: {\n            fontSize: 2.5,\n            fill: '#ccc',\n        },\n    },\n    legend: {\n        border: {\n            stroke: \"black\",\n            fill: '#292525',\n            width: 33,\n        },\n        labels: {\n            fill: '#ccc',\n            fontSize: 3,\n            cursor: 'pointer',\n        },\n        title: {\n            fill: '#ccc',\n            fontSize: 4,\n            padding: 2\n        },\n    },\n    annoationLine: {\n        data: {\n            stroke: \"#888\",\n            strokeWidth: 0.5,\n            strokeDasharray: 1,\n        },\n        labels: {\n            angle: -90,\n            fill: \"#ccc\",\n            fontSize: 3,\n        }\n    },\n};\n\nconst LegendLabel = props => {\n    const { selectedDatumName, datum } = props;\n    const style = useMemo(() => {\n        let style = props.style;\n\n        if (selectedDatumName === datum.name) {\n        style = {\n            ...props.style,\n            textDecoration: \"underline\",\n            fill: \"#fff\"\n        };\n        }\n\n        return style;\n    }, [selectedDatumName, datum.name, props.style]);\n\n    return <VictoryLabel {...props} style={style} />;\n};\n\nconst Graph = props => {\n    return (\n        <VictoryChart\n            domainPadding={10}\n            padding={{\n                top: 10,\n                bottom: 20,\n                right: 10,\n                left: 20,\n            }}\n            height={180}\n            theme={VictoryTheme.material}\n            maxDomain = {{\n                y: 70,\n                x: props.yMax,\n            }}\n            // containerComponent={<VictoryVoronoiContainer/>}\n            // animate={{ duration: 2000, easing: \"bounce\" }}\n        >\n            <VictoryAxis\n                axisLabelComponent={<VictoryLabel x={177}/>}\n                label = 'Damage'\n                tickValues={[10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190, 200, 210, 220, 230, 240]}\n                style = {styles.xaxis}\n            />\n            <VictoryAxis\n                dependentAxis\n                label = 'Penetration'\n                tickValues={[10, 20, 30, 40, 50, 60, 70]}\n                style = {styles.yaxis}\n            />\n            <VictoryScatter\n                dataComponent = {<Symbol />}\n                style={styles.scatter}\n                // labelComponent={<VictoryLabel dy={-3} />}\n                labelComponent={<VictoryLabel dy={-3} />}\n                labels={({ datum }) => {\n                    return datum.name;\n                }}\n                size={1}\n                activeSize={5}\n                data={props.listState}\n                x=\"damage\"\n                y=\"penetration\"\n            />\n            <VictoryScatter\n                dataComponent = {<Symbol />}\n                style={styles.scatter}\n                labelComponent={<VictoryLabel dy={-3} />}\n                // labelComponent={<VictoryTooltip\n                //     labelComponent = {<VictoryLabel dy={-3} />}\n                // />}\n                labels={({ datum }) => {\n                    return datum.name;\n                }}\n                size={1}\n                activeSize={5}\n                data={props.listState}\n                x=\"damage\"\n                y=\"penetration\"\n            />\n            <VictoryLegend\n                data={props.legendData}\n                dataComponent = {<Symbol />}\n                title={'Filter by caliber'}\n                labelComponent={<LegendLabel selectedDatumName={props.selectedLegendName} />}\n                events={[\n                    {\n                        target: \"labels\",\n                        eventHandlers: {\n                            onClick: props.handleLegendClick\n                        }\n                    }\n                ]}\n                gutter={10}\n                orientation=\"vertical\"\n                style={styles.legend}\n                x={312}\n                y={5}\n            />\n            <VictoryLine\n                style={styles.annoationLine}\n                labels={[\"Chest HP\"]}\n                labelComponent={\n                    <VictoryLabel\n                        y={85}\n                        x={151}\n                    />\n                }\n                x={() => 80}\n            />\n            <VictoryLabel\n                text=\"Class 1\"\n                style= {styles.classLabel}\n                datum={{ x: 5, y: 11 }}\n                textAnchor=\"start\"\n                verticalAnchor=\"end\"\n            />\n            <VictoryLabel\n                text=\"Class 2\"\n                style= {styles.classLabel}\n                datum={{ x: 5, y: 21 }}\n                textAnchor=\"start\"\n                verticalAnchor=\"end\"\n            />\n            <VictoryLabel\n                text=\"Class 3\"\n                style= {styles.classLabel}\n                datum={{ x: 5, y: 31 }}\n                textAnchor=\"start\"\n                verticalAnchor=\"end\"\n            />\n            <VictoryLabel\n                text=\"Class 4\"\n                style= {styles.classLabel}\n                datum={{ x: 5, y: 41 }}\n                textAnchor=\"start\"\n                verticalAnchor=\"end\"\n            />\n            <VictoryLabel\n                text=\"Class 5\"\n                style= {styles.classLabel}\n                datum={{ x: 5, y: 51 }}\n                textAnchor=\"start\"\n                verticalAnchor=\"end\"\n            />\n            <VictoryLabel\n                text=\"Class 6\"\n                style= {styles.classLabel}\n                datum={{ x: 5, y: 61 }}\n                textAnchor=\"start\"\n                verticalAnchor=\"end\"\n            />\n        </VictoryChart>\n    );\n}\n\nexport default Graph;\n","import React, { useState, useMemo, useCallback } from 'react';\n\nimport './App.css';\nimport Graph from './components/Graph.jsx';\n\nimport rawData from './data.json';\n\nconst styles = {\n    updatedLabel: {\n        fontSize: '10px',\n        position: 'absolute',\n        top: 2,\n        left: 4,\n        color: '#ccc',  \n    },\n};\n\n\nconst MAX_DAMAGE = 200;\n\nconst formattedData = rawData.data.map((ammoData) => {\n    const returnData = {\n        ...ammoData,\n    };\n    \n    if(ammoData.damage > MAX_DAMAGE){\n        returnData.name = `${ammoData.name} (${ammoData.damage})`;\n        returnData.damage = MAX_DAMAGE;\n    }\n    \n    return returnData;\n})\n.sort((a, b) => {\n    return a.type.localeCompare(b.type);\n});\n\nlet typeCache = [];\nconst legendData = formattedData.map((ammo) => {\n    if (typeCache.includes(ammo.type)){\n        return false;\n    }\n\n    typeCache.push(ammo.type);\n\n    return {\n        name: ammo.type,\n        symbol: ammo.symbol,\n    }\n}).filter(Boolean);\n\nfunction App() {\n    const [selectedLegendName, setSelectedLegendName] = useState();\n\n    const listState = useMemo(() => {\n        return formattedData.filter(ammo =>\n            !selectedLegendName || ammo.type === selectedLegendName\n        );\n    }, [selectedLegendName]);\n\n    const handleLegendClick = useCallback((event, { datum: { name } }) => {\n        if (selectedLegendName === name) {\n            setSelectedLegendName();\n        } else {\n            setSelectedLegendName(name);\n        }\n\n    }, [selectedLegendName, setSelectedLegendName]);\n    \n   return <div className=\"App\">\n        <div\n            style = { styles.updatedLabel }\n        >\n            {`Last updated: ${new Date(rawData.updated).toLocaleDateString()}`}        \n        </div>\n        <Graph\n            rawData = {rawData}\n            listState = {listState}\n            legendData = {legendData}\n            selectedLegendName = {selectedLegendName}\n            handleLegendClick = {handleLegendClick}\n            yMax = {MAX_DAMAGE}\n        />\n    </div>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
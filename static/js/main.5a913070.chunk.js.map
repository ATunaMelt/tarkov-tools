{"version":3,"sources":["points/index.js","points/Square.jsx","points/Circle.jsx","points/TriangleUp.jsx","points/TriangleDown.jsx","points/Diamond.jsx","points/Plus.jsx","Symbol.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Square","require","default","Circle","TriangleUp","TriangleDown","Diamond","Plus","this","props","viewBox","xmlns","d","React","Component","Symbol","x","y","datum","PointComponent","shapes","symbol","type","width","height","fill","SIZE","formattedData","rawData","data","map","ammoData","returnData","damage","name","sort","a","b","localeCompare","styles","updatedLabel","fontSize","position","top","left","color","classLabel","strokeWidth","xaxis","tickLabels","grid","stroke","axisLabel","padding","yaxis","scatter","labels","legend","border","cursor","title","annoationLine","strokeDasharray","angle","typeCache","legendData","ammo","includes","push","filter","Boolean","LegendLabel","selectedDatumName","style","useMemo","textDecoration","App","useState","selectedLegendName","setSelectedLegendName","listState","handleLegendClick","useCallback","event","className","Date","updated","toLocaleDateString","domainPadding","bottom","right","theme","VictoryTheme","material","maxDomain","axisLabelComponent","label","tickValues","dependentAxis","dataComponent","labelComponent","dy","size","events","target","eventHandlers","onClick","gutter","orientation","text","textAnchor","verticalAnchor","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5a913070.chunk.js","sourcesContent":["module.exports = {\n    Square: require('./Square').default,\n    Circle: require('./Circle').default,\n    TriangleUp: require('./TriangleUp').default,\n    TriangleDown: require('./TriangleDown').default,\n    Diamond: require('./Diamond').default,\n    Plus: require('./Plus').default,\n};\n","import React from 'react';\n\nclass Square extends React.Component {\n    render() {\n        return (\n            <svg\n                {...this.props}\n                viewBox=\"0 0 300 300\"\n                xmlns=\"http://www.w3.org/2000/svg\" \n            >\n                <path\n                    d=\"M0 0,L0 300,L300 300,L300 0, Z\"\n                />\n            </svg>\n        );\n    }\n};\n\nexport default Square;\n","import React from 'react';\n\nclass Circle extends React.Component {\n    render() {\n        return (\n            <svg\n                {...this.props}\n                viewBox=\"0 0 200 200\"\n                xmlns=\"http://www.w3.org/2000/svg\" \n            >\n                <path \n                    d=\"\n                        M 100, 100\n                        m -75, 0\n                        a 75,75 0 1,0 150,0\n                        a 75,75 0 1,0 -150,0\n                    \"\n                />\n            </svg>\n        );\n    }\n};\n\nexport default Circle;\n","import React from 'react';\n\nclass TriangleUp extends React.Component {\n    render() {\n        return (\n            <svg\n                {...this.props}\n                viewBox=\"0 0 300 300\"\n                xmlns=\"http://www.w3.org/2000/svg\" \n            >\n                <path\n                    d=\"M0 300\n                    L300 300\n                    L150 0\n                    Z\"\n                />\n            </svg>\n        );\n    }\n};\n\nexport default TriangleUp;\n","import React from 'react';\n\nclass TriangleUp extends React.Component {\n    render() {\n        return (\n            <svg\n                {...this.props}\n                viewBox=\"0 0 300 300\"\n                xmlns=\"http://www.w3.org/2000/svg\" \n            >\n                <path\n                    d=\"M0 0\n                    L300 0\n                    L150 300\n                    Z\"\n                />\n            </svg>\n        );\n    }\n};\n\nexport default TriangleUp;\n","import React from 'react';\n\nclass TriangleUp extends React.Component {\n    render() {\n        return (\n            <svg\n                {...this.props}\n                viewBox=\"0 0 300 300\"\n                xmlns=\"http://www.w3.org/2000/svg\" \n            >\n                <path\n                    d=\"M0 150\n                    L150 0\n                    L300 150\n                    L150 300\n                    Z\"\n                />\n            </svg>\n        );\n    }\n};\n\nexport default TriangleUp;\n","import React from 'react';\n\nclass Plus extends React.Component {\n    render() {\n        return (\n            <svg\n                {...this.props}\n                viewBox=\"0 0 300 300\"\n                xmlns=\"http://www.w3.org/2000/svg\" \n            >\n                <path\n                    d=\"\n                    M125 0\n                    L175 0\n                    L175 125\n                    L300 125\n                    L300 175\n                    L175 175\n                    L175 300\n                    L125 300\n                    L125 175\n                    L0   175\n                    L0   125\n                    L125 125\n                    Z\"\n                />\n            </svg>\n        );\n    }\n};\n\nexport default Plus;\n","import React from 'react';\n\nimport shapes from './points/';\n\nconst SIZE = 2;\n\nclass Symbol extends React.Component {\n    render() {\n        const {x, y, datum} = this.props;\n        const PointComponent = shapes[datum.symbol.type];\n        \n        return (\n            <PointComponent\n                width={SIZE}\n                height={SIZE}\n                fill={datum.symbol.fill}\n                x={x - SIZE / 2}\n                y={y - SIZE / 2}\n            />\n        );\n    }\n} \n    \nexport default Symbol;\n","import React, { useState, useMemo, useCallback } from 'react';\nimport {\n    VictoryChart,\n    VictoryScatter,\n    VictoryTheme,\n    VictoryLegend,\n    VictoryLine,\n    VictoryLabel,\n    VictoryAxis\n} from 'victory';\n\nimport './App.css';\nimport Symbol from './Symbol.jsx';\nimport rawData from './data.json';\n\nconst MAX_DAMAGE = 200;\n\nconst formattedData = rawData.data.map((ammoData) => {\n    const returnData = {\n        ...ammoData,\n    };\n    \n    if(ammoData.damage > MAX_DAMAGE){\n        returnData.name = `${ammoData.name} (${ammoData.damage})`;\n        returnData.damage = MAX_DAMAGE;\n    }\n    \n    return returnData;\n})\n.sort((a, b) => {\n    return a.type.localeCompare(b.type);\n});\n\nconst styles = {\n    updatedLabel: {\n        fontSize: '10px',\n        position: 'absolute',\n        top: 2,\n        left: 4,\n        color: '#ccc',  \n    },\n    classLabel: {\n        fontSize: 3,\n        fill: '#ddd',\n        strokeWidth: 1,\n    },\n    xaxis: {\n        tickLabels: {\n            fontSize: 5,\n        },\n        grid: {\n            stroke: '#555',\n        },\n        axisLabel: {\n            fontSize: 4, \n            padding: 5,\n            fill: '#ccc',\n        },\n    },\n    yaxis: {\n        tickLabels: {\n            fontSize: 5,\n        },\n        grid: {\n            stroke: '#555',\n        },\n        axisLabel: {\n            fontSize: 4, \n            padding: 5,\n            fill: '#ccc',\n        },\n    },\n    scatter: {\n        labels: {\n            fontSize: 2.5,\n            fill: '#ccc',\n        },\n    },\n    legend: {\n        border: {\n            stroke: \"black\",\n            fill: '#292525',\n            width: 33,\n        },\n        labels: {\n            fill: '#ccc',\n            fontSize: 3,\n            cursor: 'pointer',\n        },\n        title: {\n            fill: '#ccc',\n            fontSize: 4,\n            padding: 2\n        },\n    },\n    annoationLine: {\n        data: {\n            stroke: \"#888\",\n            strokeWidth: 0.5,\n            strokeDasharray: 1,\n        },\n        labels: {\n            angle: -90,\n            fill: \"#ccc\",\n            fontSize: 3,\n        }\n    },\n};\n\nlet typeCache = [];\nconst legendData = formattedData.map((ammo) => {\n    if (typeCache.includes(ammo.type)){\n        return false;\n    }\n\n    typeCache.push(ammo.type);\n\n    return {\n        name: ammo.type,\n        symbol: ammo.symbol,\n    }\n}).filter(Boolean);\n\nconst LegendLabel = props => {\n    const { selectedDatumName, datum } = props;\n    const style = useMemo(() => {\n        let style = props.style;\n\n        if (selectedDatumName === datum.name) {\n        style = {\n            ...props.style,\n            textDecoration: \"underline\",\n            fill: \"#fff\"\n        };\n        }\n\n        return style;\n    }, [selectedDatumName, datum.name, props.style]);\n\n    return <VictoryLabel {...props} style={style} />;\n};\n\nfunction App() {\n    const [selectedLegendName, setSelectedLegendName] = useState();\n\n    const listState = useMemo(() => {\n        return formattedData.filter(ammo =>\n            !selectedLegendName || ammo.type === selectedLegendName\n        );\n    }, [selectedLegendName]);\n\n    const handleLegendClick = useCallback((event, { datum: { name } }) => {\n        if (selectedLegendName === name) {\n            setSelectedLegendName();\n        } else {\n            setSelectedLegendName(name);\n        }\n\n    }, [selectedLegendName, setSelectedLegendName]);\n\n    return (\n        <div className=\"App\">\n            <div\n                style = { styles.updatedLabel }\n            >\n                {`Last updated: ${new Date(rawData.updated).toLocaleDateString()}`}        \n            </div>\n            <VictoryChart\n                domainPadding={10}\n                padding={{\n                    top: 10,\n                    bottom: 20,\n                    right: 10,\n                    left: 20,\n                }}\n                height={180}\n                theme={VictoryTheme.material}\n                maxDomain = {{\n                    y: 70,\n                    x: MAX_DAMAGE,\n                }}\n            >\n                <VictoryAxis\n                    axisLabelComponent={<VictoryLabel x={177}/>}\n                    label = 'Damage'\n                    tickValues={[10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190, 200, 210, 220, 230, 240]}\n                    style = {styles.xaxis}\n                />\n                <VictoryAxis\n                    dependentAxis\n                    label = 'Penetration'\n                    tickValues={[10, 20, 30, 40, 50, 60, 70]}\n                    style = {styles.yaxis}\n                />\n                <VictoryScatter\n                    dataComponent = {<Symbol />}\n                    style={styles.scatter}\n                    labelComponent={<VictoryLabel dy={-3} />}\n                    labels={({ datum }) => {\n                        return datum.name;\n                    }}\n                    size={1}\n                    data={listState}\n                    x=\"damage\"\n                    y=\"penetration\"\n                />\n                <VictoryLegend\n                    data={legendData}\n                    dataComponent = {<Symbol />}\n                    title={'Filter by caliber'}\n                    labelComponent={<LegendLabel selectedDatumName={selectedLegendName} />}\n                    events={[\n                      {\n                        target: \"labels\",\n                        eventHandlers: {\n                          onClick: handleLegendClick\n                        }\n                      }\n                    ]}\n                    gutter={10}\n                    orientation=\"vertical\"\n                    style={styles.legend}\n                    x={312}\n                    y={5}\n                />\n                <VictoryLine\n                    style={styles.annoationLine}\n                    labels={[\"Chest HP\"]}\n                    labelComponent={\n                        <VictoryLabel\n                            y={85}\n                            x={151}\n                        />\n                    }\n                    x={() => 80}\n                />\n                <VictoryLabel\n                    text=\"Class 1\"\n                    style= {styles.classLabel}\n                    datum={{ x: 5, y: 11 }}\n                    textAnchor=\"start\"\n                    verticalAnchor=\"end\"\n                />\n                <VictoryLabel\n                    text=\"Class 2\"\n                    style= {styles.classLabel}\n                    datum={{ x: 5, y: 21 }}\n                    textAnchor=\"start\"\n                    verticalAnchor=\"end\"\n                />\n                <VictoryLabel\n                    text=\"Class 3\"\n                    style= {styles.classLabel}\n                    datum={{ x: 5, y: 31 }}\n                    textAnchor=\"start\"\n                    verticalAnchor=\"end\"\n                />\n                <VictoryLabel\n                    text=\"Class 4\"\n                    style= {styles.classLabel}\n                    datum={{ x: 5, y: 41 }}\n                    textAnchor=\"start\"\n                    verticalAnchor=\"end\"\n                />\n                <VictoryLabel\n                    text=\"Class 5\"\n                    style= {styles.classLabel}\n                    datum={{ x: 5, y: 51 }}\n                    textAnchor=\"start\"\n                    verticalAnchor=\"end\"\n                />\n                <VictoryLabel\n                    text=\"Class 6\"\n                    style= {styles.classLabel}\n                    datum={{ x: 5, y: 61 }}\n                    textAnchor=\"start\"\n                    verticalAnchor=\"end\"\n                />\n            </VictoryChart>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}